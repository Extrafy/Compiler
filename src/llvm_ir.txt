@N = constant i32 10
@a = global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]
@_str_0 = constant [3 x i8] c", \00"

declare i32 @getint()

declare i32 @getchar()

declare void @putint(i32)

declare void @putchar(i32)

declare void @putstr(i8*)

define dso_local i32 @fib(i32){
;<label>:1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = icmp eq i32 %3, 1
	br i1 %4, label %5, label %6

;<label>:5:
	ret i32 1

;<label>:6:
	%7 = load i32, i32* %2
	%8 = icmp eq i32 %7, 2
	br i1 %8, label %9, label %10

;<label>:9:
	ret i32 2

;<label>:10:
	%11 = load i32, i32* %2
	%12 = sub i32 %11, 1
	%13 = call i32 @fib(i32 %12)
	%14 = load i32, i32* %2
	%15 = sub i32 %14, 2
	%16 = call i32 @fib(i32 %15)
	%17 = add i32 %13, %16
	ret i32 %17
}

define dso_local i32 @main(){
;<label>:0:
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	store i32 5, i32* %2
	%3 = alloca i32
	store i32 1, i32* %3
	%4 = alloca i32
	store i32 2, i32* %4
	%5 = call i32 @getint()
	store i32 %5, i32* %1
	%6 = call i32 @getint()
	store i32 %6, i32* %2
	%7 = load i32, i32* %1
	%8 = load i32, i32* %2
	%9 = mul i32 %7, %8
	%10 = sub i32 0, %9
	%11 = call i32 @fib(i32 4)
	%12 = mul i32 %10, %11
	%13 = add i32 %12, 0
	%14 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%15 = load i32, i32* %14
	%16 = mul i32 %15, 1
	%17 = add i32 %13, %16
	%18 = sdiv i32 1, 2
	%19 = sub i32 %17, %18
	%20 = sdiv i32 %19, 5
	store i32 %20, i32* %1
	%21 = mul i32 7, 5923
	%22 = sdiv i32 %21, 56
	%23 = mul i32 %22, 56
	%24 = sub i32 %21, %23
	%25 = mul i32 %24, 57
	%26 = call i32 @fib(i32 5)
	%27 = add i32 %26, 2
	%28 = call i32 @fib(i32 %27)
	%29 = sub i32 %25, %28
	%30 = load i32, i32* %3
	%31 = load i32, i32* %4
	%32 = add i32 %30, %31
	%33 = sdiv i32 89, 2
	%34 = mul i32 %33, 36
	%35 = sub i32 %34, 53
	%36 = sdiv i32 %35, 1
	%37 = mul i32 %36, 6
	%38 = sub i32 %32, %37
	%39 = mul i32 45, 56
	%40 = sdiv i32 %39, 85
	%41 = sub i32 %40, 56
	%42 = mul i32 35, 56
	%43 = sdiv i32 %42, 4
	%44 = add i32 %41, %43
	%45 = sub i32 %44, 9
	%46 = mul i32 2, %45
	%47 = sub i32 %38, %46
	%48 = add i32 %29, %47
	store i32 %48, i32* %2
	%49 = sub i32 0, 6
	%50 = alloca i32
	store i32 %49, i32* %50
	%51 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%52 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%53 = load i32, i32* %52
	%54 = load i32, i32* %1
	%55 = load i32, i32* %1
	%56 = mul i32 %54, %55
	%57 = add i32 %53, %56
	store i32 %57, i32* %51
	%58 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%59 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%60 = load i32, i32* %59
	%61 = load i32, i32* %1
	%62 = load i32, i32* %1
	%63 = mul i32 %61, %62
	%64 = add i32 %60, %63
	store i32 %64, i32* %58
	%65 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%66 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%67 = load i32, i32* %66
	%68 = load i32, i32* %1
	%69 = load i32, i32* %1
	%70 = mul i32 %68, %69
	%71 = add i32 %67, %70
	store i32 %71, i32* %65
	%72 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%73 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%74 = load i32, i32* %73
	%75 = load i32, i32* %1
	%76 = load i32, i32* %1
	%77 = mul i32 %75, %76
	%78 = add i32 %74, %77
	store i32 %78, i32* %72
	%79 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%80 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%81 = load i32, i32* %80
	%82 = load i32, i32* %1
	%83 = load i32, i32* %1
	%84 = mul i32 %82, %83
	%85 = add i32 %81, %84
	store i32 %85, i32* %79
	%86 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%87 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%88 = load i32, i32* %87
	%89 = load i32, i32* %1
	%90 = load i32, i32* %1
	%91 = mul i32 %89, %90
	%92 = add i32 %88, %91
	store i32 %92, i32* %86
	%93 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%94 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%95 = load i32, i32* %94
	%96 = load i32, i32* %1
	%97 = load i32, i32* %1
	%98 = mul i32 %96, %97
	%99 = add i32 %95, %98
	store i32 %99, i32* %93
	%100 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%101 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%102 = load i32, i32* %101
	%103 = load i32, i32* %1
	%104 = load i32, i32* %1
	%105 = mul i32 %103, %104
	%106 = add i32 %102, %105
	store i32 %106, i32* %100
	%107 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%108 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%109 = load i32, i32* %108
	%110 = load i32, i32* %1
	%111 = load i32, i32* %1
	%112 = mul i32 %110, %111
	%113 = add i32 %109, %112
	store i32 %113, i32* %107
	%114 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%115 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%116 = load i32, i32* %115
	%117 = load i32, i32* %1
	%118 = load i32, i32* %1
	%119 = mul i32 %117, %118
	%120 = add i32 %116, %119
	store i32 %120, i32* %114
	store i32 0, i32* %1
	br label %121

;<label>:121:
	%122 = load i32, i32* %1
	%123 = icmp slt i32 %122, 10
	br i1 %123, label %124, label %132

;<label>:124:
	%125 = load i32, i32* %1
	%126 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %125
	%127 = load i32, i32* %126
	call void @putint(i32 %127)
	%128 = getelementptr inbounds [3 x i8], [3 x i8]* @_str_0, i32 0, i32 0
	call void @putstr(i8* %128)
	%129 = load i32, i32* %1
	%130 = add i32 %129, 1
	store i32 %130, i32* %1
	br label %131

;<label>:131:
	br label %121

;<label>:132:
	%133 = load i32, i32* %1
	%134 = load i32, i32* %2
	%135 = load i32, i32* %50
	call void @putchar(i32 10)
	call void @putint(i32 %133)
	%136 = getelementptr inbounds [3 x i8], [3 x i8]* @_str_0, i32 0, i32 0
	call void @putstr(i8* %136)
	call void @putint(i32 %134)
	%137 = getelementptr inbounds [3 x i8], [3 x i8]* @_str_0, i32 0, i32 0
	call void @putstr(i8* %137)
	call void @putint(i32 %135)
	call void @putchar(i32 10)
	ret i32 0
}


